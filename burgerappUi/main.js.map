{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/order-details/order-details.component.css","webpack:///./src/app/order-details/order-details.component.html","webpack:///./src/app/order-details/order-details.component.ts","webpack:///./src/app/services/rest-services.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { HomeComponent } from './home/home.component';\r\nimport { OrderDetailsComponent } from './order-details/order-details.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', redirectTo: '/home', pathMatch: 'full' },\r\n  { path: 'home', component: HomeComponent },\r\n  { path: 'orderdetails', component: OrderDetailsComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }","module.exports = \"\"","module.exports = \"<div class=\\\"header\\\">\\n    <div class=\\\"container\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-12\\\">\\n          <div class=\\\"logo\\\">\\n            <a  routerLink=\\\"/home\\\">\\n              <img src=\\\"./assets/images/logo.jpg\\\" height=\\\"50px\\\" width=\\\"86px\\\">\\n            </a>\\n          </div>\\n          <div class=\\\"header-search\\\">\\n            <div class=\\\"input-group\\\">\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search by Name\\\" [(ngModel)]=\\\"searchtext\\\">\\n              <span class=\\\"input-group-btn\\\">\\n                <button class=\\\"btn btn-default\\\" type=\\\"button\\\" (click)=\\\"searchBurger()\\\">\\n                  <span class=\\\"glyphicon glyphicon-search\\\"></span>\\n                </button>\\n              </span>\\n            </div>\\n          </div>\\n          <div class=\\\"hcartbox\\\">\\n            <div class=\\\"header-shop-cart\\\">\\n              <a routerLink=\\\"/orderdetails\\\">\\n                <div class=\\\"hcartqnt\\\">CART</div>\\n              </a>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n<router-outlet></router-outlet>\\n\\n<!-- <app-order-details></app-order-details> -->\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { OrderDetailsComponent } from './order-details/order-details.component';\nimport {RestServicesService} from './services/rest-services.service';\nimport { AppRoutingModule } from './app-routing.module';\nimport {FormsModule} from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    OrderDetailsComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule,\n    FormsModule\n  ],\n  providers: [RestServicesService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \".active{\\r\\n    text-decoration:underline\\r\\n  }\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n\\n    <!--start left panel-->\\n    <div class=\\\"col-lg-3 col-md-3 col-sm-4 hidden-xs\\\">\\n      <div class=\\\"section-left\\\">\\n\\n        <div class=\\\"sidebox\\\">\\n            <div class=\\\"title\\\">Category</div>\\n            <div class=\\\"side-widget\\\">\\n              <ul class=\\\"nav\\\" role=\\\"tablist\\\">\\n                <div *ngFor=\\\"let item of foodCategory\\\">\\n                  <li role=\\\"presentation\\\">\\n                    <button (click)=\\\"onFilterChange(item,'category')\\\" \\n                    [ngClass]=\\\"{'active':selectedType==item}\\\"\\n                    style=\\\"background-color:transparent;color:black\\\">\\n                      {{item}}\\n                    </button>\\n                  </li>\\n                </div>\\n              </ul>\\n            </div>\\n          </div>\\n\\n        <div class=\\\"sidebox\\\">\\n          <div class=\\\"title\\\">Price(in Rs.)</div>\\n          <div class=\\\"side-widget\\\">\\n            <ul class=\\\"nav\\\" role=\\\"tablist\\\">\\n              <div *ngFor=\\\"let price of priceRange\\\">\\n                <li role=\\\"presentation\\\">\\n                  <button (click)=\\\"onFilterChange(price,'price')\\\" \\n                  [ngClass]=\\\"{'active':selectedType==price}\\\"\\n                  style=\\\"background-color:transparent;color:black\\\">\\n                    {{price}}\\n                  </button>\\n                </li>\\n              </div>\\n            </ul>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"sidebox\\\">\\n          <div class=\\\"title\\\">Ratings</div>\\n          <div class=\\\"side-widget\\\">\\n            <ul class=\\\"nav\\\" role=\\\"tablist\\\">\\n              <div *ngFor=\\\"let rating of ratings\\\">\\n                <li role=\\\"presentation\\\">\\n                  <button (click)=\\\"onFilterChange(rating,'rating')\\\" \\n                  [ngClass]=\\\"{'active':selectedType==rating}\\\"\\n                  style=\\\"background-color:transparent;color:black\\\">\\n                    {{rating}} star\\n                  </button>\\n                </li>\\n              </div>\\n            </ul>\\n          </div>\\n        </div>\\n\\n      </div>\\n    </div>\\n    <!--end left panel-->\\n\\n\\n\\n    <!--start right panel-->\\n    <div class=\\\"col-lg-9 col-md-9 col-sm-8\\\">\\n      <div class=\\\"section-right\\\">\\n\\n\\n        <!--Product filter -->\\n\\n        <!-- end Product filter-->\\n\\n        <!-- start inner product Product -->\\n        <div class=\\\"row category-box whitebg\\\">\\n          <div class=\\\"col-lg-12 col-md-12 col-sm-12\\\">\\n\\n            <div *ngFor=\\\"let item of burgerlist\\\">\\n              <div class=\\\"product-item\\\">\\n                <div class=\\\"product-thumb\\\">\\n                  <img src=\\\"./assets/images/product/11.jpg\\\">\\n                </div>\\n                <div class=\\\"product-name\\\">{{item.name}}</div>\\n                <div class=\\\"content_price\\\">\\n                  <div class=\\\"product-price\\\">{{item.discountedPrice}}</div>\\n                  <div class=\\\"old-price\\\">{{item.price}}</div>\\n                </div>\\n                <div class=\\\"btn btn-primary\\\" title=\\\"Add to Cart\\\" (click)=\\\"addItem(item)\\\">\\n                  +\\n                </div>\\n              </div>\\n            </div>\\n\\n          </div>\\n\\n\\n\\n        </div>\\n        <!-- end inner product Product -->\\n\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { RestServicesService } from '../services/rest-services.service';\n\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  burgerlist: object[];\n  searchtext: string;\n  burgerOriginalList: object[];\n  priceRange: string[];\n  foodCategory: string[];\n  ratings: number[];\n  selectedType: string = '';\n  orderList: string[];\n\n  constructor(private restService: RestServicesService) { }\n\n  ngOnInit() {\n    this.priceRange = ['50-100', '100-200', '300-400', '400-500'];\n    this.ratings = [5, 4, 3, 2, 1];\n    this.foodCategory = ['veg', 'non veg'];\n    this.restService.getBurgetList().subscribe((response: any) => {\n      console.log(response);\n      this.burgerlist = response;\n      this.burgerOriginalList = response;\n    }, (err) => {\n      console.log(err);\n      alert(\"Internal server error\");\n    });\n  }\n\n\n  onFilterChange(data, filterType) {\n    this.selectedType = data; let arr;\n    if (filterType === 'category') {\n      arr = this.burgerOriginalList.filter((item: any) => {\n        if (item.category === data)\n          return item;\n      })\n    }\n    else if (filterType === 'price') {\n      let amount = data.split('-');\n      arr = this.burgerOriginalList.filter((item: any) => {\n        if (parseFloat(item.discountedPrice) >= parseFloat(amount[0]) && parseFloat(item.discountedPrice) <= parseFloat(amount[1]))\n          return item;\n      })\n    }\n\n    else if (filterType === 'rating') {\n      arr = this.burgerOriginalList.filter((item: any) => {\n        if (item.rating === data.toString())\n          return item;\n      })\n    }\n\n    this.burgerlist = arr;\n\n  }\n\n  searchBurger() {\n    if (this.searchtext && this.burgerlist.length) {\n      let arr = this.burgerOriginalList.filter((item: any) => {\n        if (item.name.toLowerCase() === this.searchtext.toLowerCase())\n          return item;\n      })\n      this.burgerlist = arr;\n    }\n    else {\n      this.burgerlist = this.burgerOriginalList;\n    }\n  }\n\n  addItem(item) {\n    this.restService.pushDataInOrderList(item);\n  }\n\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row category-box whitebg \\\">\\n  <div class=\\\"col-lg-12 col-md-12 col-sm-12\\\">\\n    <div class=\\\"account-section\\\">\\n\\n      <div class=\\\"title-page\\\">My Order</div>\\n      <div class=\\\"accc_orderbox\\\" *ngIf=\\\" orderlist.length===0\\\"> You have placed no orders. </div>\\n      <a href=\\\"#\\\">« Back</a>\\n\\n      <!-- start order item-->\\n      <div class=\\\"table-responsive\\\">\\n        <table class=\\\"table table-bordered\\\">\\n          <tbody>\\n           <tr>\\n              <th>item # </th>\\n              <th>Date</th>\\n              <th>Ship To</th>\\n              <th>Order Total</th>\\n              <th>Order Status</th>\\n            </tr>\\n            <tr *ngFor=\\\"let i of orderlist;index as in\\\">\\n              <td>{{in+1}}</td>\\n              <td>11-may-2017</td>\\n              <td>{{i.name}}</td>\\n              <td>{{i.discountedPrice}}</td>\\n              <td>\\n                <em>Pending</em>\\n              </td>\\n            </tr>\\n          </tbody>\\n        </table>\\n      </div>\\n      <!-- end order item-->\\n\\n    </div>\\n    <input type=\\\"Button\\\" value=\\\"Place Order\\\" (click)=\\\"onSubmit()\\\" />\\n  </div>\\n\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { RestServicesService } from '../services/rest-services.service';\n\n\n@Component({\n  selector: 'app-order-details',\n  templateUrl: './order-details.component.html',\n  styleUrls: ['./order-details.component.css']\n})\nexport class OrderDetailsComponent implements OnInit {\n  orderlist: object[];\n\n  constructor(private restService: RestServicesService) { }\n\n  ngOnInit() {\n    this.orderlist = this.restService.getOrderList();\n  }\n\n\n  onSubmit() {\n    alert('Your order is placed successfully.It will be delived within one hour');\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RestServicesService {\n\n  orderList: any = [];\n  constructor(private http: HttpClient) { }\n\n  getBurgetList() {\n    return this.http.get('http://demo8381899.mockable.io/bugerList');\n  }\n\n  pushDataInOrderList(item) {\n    this.orderList.push(item)\n  }\n\n  getOrderList() {\n    return this.orderList;\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}